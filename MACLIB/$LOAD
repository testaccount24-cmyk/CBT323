         MACRO
.*
.**********************************************************************
.*                                                                    *
.* Component_Type: MVS HL-Assembler Macro                             *
.*    Description: Load a value onto a register                       *
.*         Author: Gerard J Nicol                                     *
.*           Date: September 1997                                     *
.*                                                                    *
.*--+----1----+----2----+----3----+----4----+----5----+----6----+----7* --+----8
.*
&LABEL   $LOAD &V,                      -(value)=register, value=stor  +
               &R,                      -register to receive value     +
               &VL=,                    -length of value for load      +
               &MODE=VALUE
*
         AIF ('&V'(1,1) EQ '(').REG     -use register notation
         AIF ('&MODE' EQ 'ADDR').ADDR   -load address
         AIF ('&MODE' EQ 'LENGTH').LEN  -load length
.STORAGE ANOP                           -process as storage value
         SLR   &R,&R                    -zero register
L&SYSNDX $DEFL V=&V,VL=&VL
A&SYSNDX $GETMASK L&SYSNDX              -get length mask for input
         ICM   &R,A&SYSNDX,&V           -load value into register
         AGO   .END                     -get out
.ADDR    ANOP
         LA    &R,&V                    -load address
         AGO   .END                     -get out
.LEN     ANOP
B&SYSNDX $DEFL V=&V,VL=&VL              -load length
         LA    &R,B&SYSNDX
         AGO   .END                     -get out
.REG     ANOP                           -process as register value
         AIF ('&MODE' EQ 'LENGTH').RLEN -load length
&REG     SETC  '&V'(2,K'&V-2)           -extract register value
         LR    &R,&REG                  -load output register
         AGO   .END                     -get out
.RLEN    ANOP
         $LOAD &VL,&R                   -load the length instead
         AGO   .END                     -get out
.END     ANOP                           -exit
         MEND
