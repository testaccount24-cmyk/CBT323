FILTER   TITLE 'REXX function to check string against a filter'
*
*---------------------------------------------------------------------*
*                                                                     *
*      Module: FILTER                                                 *
*      Author: Gerard Nicol                                           *
* Description: REXX Function to compare a string to a filter          *
*     Calling: FILTER(filter_string,string)                           *
*                                                                     *
*---+----1----+----2----+----3----+----4----+----5----+----6----+----7*
*
FILTER   CSECT
FILTER   AMODE 31
FILTER   RMODE ANY
         PRINT NOGEN
@PROLOG  $GJNLINK PROLOG,PARMPTR=R10    -entry with EFPL in R10
         $REXX ENTRY,ARGS=(2,0)         -address EFPL, and count parms
         LM    R0,R3,0(R1)              -load entry for 2 parms
         ST    R0,FLTRPARM              -store parm1 address
         ST    R2,FLTRPARM+8            -store parm2 address
         ST    R1,LENGTHS               -store parm1 length
         ST    R3,LENGTHS+4             -store parm2 length
         CALL  GJNFLTER,MF=(E,FLTRPARM) -call filter program
         LTR   R15,R15                  -check for RC=0
         BNZ   @EPILOG                  -if OK, the exit
         MVI   RESULT,C'1'              -if NotOK then set bad result
@EPILOG  EQU   *
         $REXX RESULT,V=RESULT          -set REXX result block
         $GJNLINK EPILOG,LASTCC=RC      -exit with RC
*
TEMP     DC    CL6' '
RC       DC    H'0'
RESULT   DC    CL1'0'
FLTRPARM CALL  ,(,LENGTHS,,LENGTHS+4),MF=L
LENGTHS  DC    F'0'
         DC    F'0'
         $REXX INCLUDE
         END   FILTER
