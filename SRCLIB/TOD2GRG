TOD2GRG  TITLE 'REXX function- Convert a Store Clock entry'
*
**********************************************************************
*                                                                    *
* Component_Type: MVS HL-Assembler REXX Function                     *
*    Description: Convert a Store Clock entry'                       *
*         Author: Gerard J Nicol                                     *
*           Date: September 1997                                     *
*                                                                    *
*--+----1----+----2----+----3----+----4----+----5----+----6----+----7*  --+----8
*
TOD2GRG  CSECT
TOD2GRG  AMODE 31
TOD2GRG  RMODE ANY
         PRINT NOGEN
@PROLOG  $GJNLINK PROLOG,PARMPTR=10     -std ALC entry
         $REXX ENTRY,ARGS=(1,1)         -std REXX entry
         $REXX VER,                                                    +
               A=1,                                                    +
               VTYPE=LENGTH,                                           +
               PARMS=(8,8),                                            +
               NB=Y
         $REXX VER,                                                    +
               A=2,                                                    +
               VTYPE=LIST,                                             +
               PARMS=(DF1,DF2,DF3,DF4)
@GO      EQU   *
         L     R2,0(R11)
         SLL   R14,2
         LA    R15,@FORMATS
         L     R1,0(R14,R15)
         BR    R1
@FORMATS DC    A(YYYYDDD)
         DC    A(YYYYDDD)
         DC    A(MMDDYYYY)
         DC    A(DDMMYYYY)
         DC    A(YYYYMMDD)
YYYYDDD  STCKCONV STCKVAL=0(R2),        -convert from TOD              +
               CONVVAL=STCKRSLT,                                       +
               DATETYPE=YYYYDDD
         B     @UNPAK
MMDDYYYY STCKCONV STCKVAL=0(R2),        -convert from TOD              +
               CONVVAL=STCKRSLT,                                       +
               DATETYPE=MMDDYYYY
         B     @UNPAK
DDMMYYYY STCKCONV STCKVAL=0(R2),        -convert from TOD              +
               CONVVAL=STCKRSLT,                                       +
               DATETYPE=DDMMYYYY
         B     @UNPAK
YYYYMMDD STCKCONV STCKVAL=0(R2),        -convert from TOD              +
               CONVVAL=STCKRSLT,                                       +
               DATETYPE=YYYYMMDD
@UNPAK   EQU   *
         UNPK  WORKAREA,STCKRSLT+8(5)   -unpack date
         MVC   RESULT(8),WORKAREA+6
         UNPK  WORKAREA,STCKRSLT+0(8)   -unpack date
         MVC   RESULT+9(12),WORKAREA+0
@RESULT  EQU   *
         $REXX RESULT,V=RESULT
@EPILOG  $GJNLINK EPILOG,LASTCC=RC      -exit and set RC
*
RC       DC    F'0'
RESULT   DC    CL21' '
WORKAREA DC    CL15' '
DF1      DC    C'YYYYDDD'
DF2      DC    C'MMDDYYYY'
DF3      DC    C'DDMMYYYY'
DF4      DC    C'YYYYMMDD'
*TCKPARM DS    0F                       -parm list for STCK routine
*        DC    FL2'0'
*TCKDFM  DC    FL1'0'                   -datatype flag
*        DC    FL1'34'                  -timetype flag
*TCKVAL  DC    2F'0'                    -store clock value
STCKRSLT DC    4F'0'                    -output from routine
         $REXX INCLUDE
         END   TOD2GRG
