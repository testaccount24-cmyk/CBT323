C2B      TITLE 'REXX function- Convert char value to binary'
*
**********************************************************************
*                                                                    *
* Component_Type: MVS HL-Assembler REXX Function                     *
*    Description: Convert a character value to a binary value        *
*         Author: Gerard J Nicol                                     *
*           Date: September 1997                                     *
*                                                                    *
*--+----1----+----2----+----3----+----4----+----5----+----6----+----7*  --+----8
*
C2B      CSECT
C2B      AMODE 31
C2B      RMODE ANY
         PRINT NOGEN
@PROLOG  $GJNLINK PROLOG,PARMPTR=10     -std ALC entry
         $REXX ENTRY,ARGS=(1,0)
         $REXX VER,                                                    +
               A=1,                                                    +
               VTYPE=LENGTH,                                           +
               PARMS=(1,31),                                           +
               NB=Y
         LM    R6,R7,0(R11)             -load address/length arg-1
         LR    R8,R7                    -load length
         SLL   R8,3                     -multiply length by 8
         STORAGE OBTAIN,LENGTH=(8)      -get storage for workarea
         LR    R9,R1                    -address of workarea
         LR    R5,R1                    -save address
         USING DUMMY1,R6
         USING DUMMY2,R9
@BINLOOP EQU   *
         $CONVERT C2B,                                                 +
               I=DUMMY1V,                                              +
               O=DUMMY2V
         LA    R9,8(R9)                 -move to next output
         LA    R6,1(R6)                 -move to next input
         BCT   R7,@BINLOOP              -loop while input left
         LR    R9,R5                    -restore address of workarea
         STORAGE RELEASE,               -release storage               +
               ADDR=(9),                                               +
               LENGTH=(8)
@EPILOG  EQU   *
         LR    R9,R5                    -restore address of workarea
         $REXX RESULT,V=0(R9),VL=(8)    -set result
         $GJNLINK EPILOG,LASTCC=RC      -exit and set RC
*
RC       DC    H'0'
$MOVE    MVC   0(0,R2),0(R3)
WORKAREA DC    CL32'00000000000000000000000000000000'
*
         $REXX INCLUDE
*
DUMMY1   DSECT
DUMMY1V  DS    CL1
DUMMY2   DSECT
DUMMY2V  DS    CL8
*
         END   C2B
