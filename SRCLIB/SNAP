SNAP     TITLE 'REXX function- produce a SNAP report for a REXX prog'
*
**********************************************************************
*                                                                    *
* Component_Type: MVS HL-Assembler REXX Function                     *
*    Description: Produce a SNAP report                              *
*         Author: Gerard J Nicol                                     *
*           Date: September 1997                                     *
*                                                                    *
*--+----1----+----2----+----3----+----4----+----5----+----6----+----7*  --+----8
*
SNAP     CSECT
SNAP     AMODE 24
SNAP     RMODE 24
         PRINT GEN
@PROLOG  $GJNLINK PROLOG,PARMPTR=10     -std ALC entry
         $REXX ENTRY,ARGS=(0,2)         -std REXX entry
*
         $REXX VER,                                                    +
               A=1,                                                    +
               VTYPE=LENGTH,                                           +
               PARMS=(1,20),                                           +
               NB=N
*
         LTR   R14,R14
         BZ    @NOARG1
         LM    R14,R15,0(R11)
         ICM   R15,B'1000',=C' '
         LA    R0,O00TT
         LA    R1,L'O00TT
         MVCL  R0,R14
@NOARG1  EQU   *
         LA    R2,SNAPDCB
         USING IHADCB,R2
         $REXX VER,                                                    +
               A=2,                                                    +
               VTYPE=LENGTH,                                           +
               PARMS=(0,8),                                            +
               NB=N
         LTR   R14,R14
         BZ    @NOARG2
         LM    R14,R15,8(R11)
         ICM   R15,B'1000',=C' '
         LA    R0,DCBDDNAM
         LA    R1,L'DCBDDNAM
         MVCL  R0,R14
@NOARG2  EQU   *
         LA    R1,DCBDDNAM
         ST    R1,PARMLIST
         CALL  GJNGETJF,MF=(E,PARMLIST)
         SRL   R15,16
         $REXX SAY,V=$ERROR_1,          -display message               +
               RC=20,   '               -set RC=20                     +
               NEXT=@EPILOG,            -exit                          +
               IFRCLT=1                 -only run if RC < 1
*
         $RPT  INIT=Y,                  -initialize report writer      +
               DCB=SNAPDCB,             -code DCB on first call        +
               H=O00S,                  -address of header record      +
               USERA=USERA              -set address of user area
*
         MVC   O00DS,WORKAREA+4         -set dataset for header record
         $CONVERT T2T,O=O00TM,I=RC      -set time for header record
*
         LOAD  EP=IRXEXCOM              -load address of interface
         ST    R0,IRXEXCOM              -save address for calls
*
         OPEN  (SNAPDCB,OUTPUT)         -open SNAP DD
         CALL  SNAP0001                 -produce Call Enviro report
         CALL  SNAP0002                 -produce Host Command report
         CALL  SNAP0003                 -produce FunctionPak report
         CALL  SNAP0004                 -produce Variable report
         CLOSE SNAPDCB                  -close SNAP DD
*
         $REXX RESULT,V=(0),VL=0
@EPILOG  $GJNLINK EPILOG,LASTCC=RC      -exit and set RC
*
SNAPDCB  DCB   DSORG=PS,                                               +
               MACRF=PM,                                               +
               DDNAME=SNAP,                                            +
               LRECL=133,                                              +
               RECFM=FBA
*
$ERROR_1 $REXX EMSG,V='No File allocated to SNAP or ARG-2 value'
*
PARMLIST DS    0F
         DC    A(0)
         DC    A(CONCATP)
         DC    A(WORKAREL)
         DC    A(WORKAREA)
WORKAREL DC    A(L'WORKAREA)
WORKAREA DC    CL200' '
CONCATP  DC    XL1'01'
RC       DC    XL1'00'
IRXPARMS DS    0H
         DC    A(FUNCTION)
         DC    A(INITMOD)
         DC    A(INITADDR)
         DC    A(USERFLD)
         DC    A(RESERV)
         DC    A(EVBADDR)
         DC    A(REASCODE+X'80000000')
ID       DC    CL8'IRXEXCOM'
FUNCTION DC    CL8'FINDENVB'
INITMOD  DC    CL8'        '
INITADDR DC    A(0)
USERFLD  DC    A(0)
RESERV   DC    F'0'
REASCODE DS    F
*
USERA    DS    0H
IRXEXCOM DS    A(0)
EVBADDR  DS    A(0)
*
O00S     DS    CL133
         ORG   O00S
         DC    CL1'1'
         DC    C'REXX FunctionPak - REXX Environment SNAP'
         DC    C' ------- Title('
O00TT    DC    CL20' '
         DC    C')'
         DC    C'-'
O00DS    DC    CL44' '
         DC    C'---'
O00TM    DC    CL8' '
*
         DC    V(GJNWRITE)
         $REXX INCLUDE
         DCBD  DSORG=PS
         END   SNAP
