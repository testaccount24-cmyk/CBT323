P2D      TITLE 'REXX function- Unpack a packed decimal number'
*
**********************************************************************
*                                                                    *
* Component_Type: MVS HL-Assembler REXX Function                     *
*    Description: Convert a packed decimal number to decimal         *
*         Author: Gerard J Nicol                                     *
*           Date: September 1997                                     *
*                                                                    *
*--+----1----+----2----+----3----+----4----+----5----+----6----+----7*  --+----8
*
P2D      CSECT
P2D      AMODE 31
P2D      RMODE ANY
         PRINT NOGEN
@PROLOG  $GJNLINK PROLOG,PARMPTR=10     -std ALC entry
         $REXX ENTRY,ARGS=(1,0)
         $REXX VER,                                                    +
               A=1,                                                    +
               VTYPE=LENGTH,                                           +
               PARMS=(1,8),                                            +
               NB=Y
         LM    R6,R7,0(R11)             -load address/length arg-1
*
         LA    R2,0(R6,R7)              -load last char +1
         BCTR  R2,0                     -get last char
         XR    R1,R1                    -zero register
         IC    R1,0(R2)                 -load char
         SLL   R1,28                    -get last 4 bits
         SRL   R1,28                    -get last 4 bits
         LA    R1,TABLE(R1)             -find in table
         CLI   0(R1),C'E'               -is there a bad char
         BNE   @SIGNOK
         $REXX SAY,V=$ERROR_1,          -display message               +
               RC=20,                   -set RC=20                     +
               NEXT=@EPILOG             -exit
@SIGNOK  EQU   *
         MVC   WORKAR2(1),0(R1)         -set sign
         LA    R2,X'0F'
         LR    R3,R7
         BCTR  R3,0
         SLL   R3,28
         SLDL  R2,4
         LR    R14,R6
         AR    R14,R7
         BCTR  R14,0
         OI    0(14),X'0F'
         EX    R2,$UNPK
         $CONVERT Z2S,I=WORKAR1
         LA    R2,WORKAR1(R1)
         LA    R3,16
         SR    R3,R1
         EX    R3,$MOVE
         LA    R3,1(R3)
@EPILOG  EQU   *
         $REXX RESULT,V=WORKAR2,VL=(3)
         $GJNLINK EPILOG,LASTCC=RC      -exit and set RC
*
$MOVE    MVC   WORKAR2+1,0(R2)
$UNPK    UNPK  WORKAR1,0(0,R6)
RC       DC    H'0'
RESULT   DC    CL4'0'
WORKAR1  DC    CL16' '
WORKAR2  DC    CL17'+'
*
TABLE    DC    CL16'EEEEEEEEEE--+--+'
$ERROR_1 $REXX EMSG,V='Invalid sign value for packed number'
*
         $REXX INCLUDE
         END   P2D
