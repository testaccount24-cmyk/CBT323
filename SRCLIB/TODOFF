TODOFF   TITLE 'REXX function- add/subtract from a Store Clock value'
*
**********************************************************************
*                                                                    *
* Component Type: MVS HL-Assembler REXX Function                     *
*    Description: Add/Subtract from a Store Clock Value              *
*         Author: Gerard J Nicol                                     *
*           Date: September 1997                                     *
*                                                                    *
*--+----1----+----2----+----3----+----4----+----5----+----6----+----7*  --+----8
*
TODOFF   CSECT
TODOFF   AMODE 31
TODOFF   RMODE ANY
         PRINT NOGEN
@PROLOG  $GJNLINK PROLOG,PARMPTR=10     -std ALC entry
         $REXX ENTRY,ARGS=(1,4)         -std REXX entry
         $REXX VER,                                                    +
               A=1,                                                    +
               VTYPE=LENGTH,                                           +
               PARMS=(8,8),                                            +
               NB=Y
         $REXX VER,                                                    +
               A=2,                                                    +
               VTYPE=LIST,                                             +
               PARMS=(ADD,SUB),                                        +
               NB=Y
         LTR   R14,R14
         BZ    @NOSIGN
         L     R1,8(R11)                -load address of sign
         MVC   SIGN,0(R1)               -set sign
@NOSIGN  EQU   *
         $REXX VER,                                                    +
               A=3,                                                    +
               VTYPE=RANGE,                                            +
               PARMS=(0,4000)
         ST    R14,DAYS
         $REXX VER,                                                    +
               A=4,                                                    +
               VTYPE=RANGE,                                            +
               PARMS=(0,99)
         ST    R14,HOURS
         $REXX VER,                                                    +
               A=5,                                                    +
               VTYPE=RANGE,                                            +
               PARMS=(0,60)
         ST    R14,MINUTES
         L     R1,DAYS                  -load number of days
         M     R0,=F'2400'              -multiply by 2400
         LTR   R0,R0                    -test for GT one word
         BNZ   @OVERFLW                 -error routine
         L     R15,HOURS                -load number of hours
         M     R14,=F'100'              -multiply by 100
         LTR   R14,R14                  -test for GT one word
         BNZ   @OVERFLW                 -error routine
         AR    R1,R15                   -add hours to days
         BO    @OVERFLW                 -test for overflow
         A     R1,MINUTES               -add minutes
         BO    @OVERFLW                 -test for overflow
         CVD   R1,RESULT                -pack
         CLC   RESULT(4),=F'0'          -load hiword of result
         BNE   @OVERFLW                 -error routine
         MVC   PLUS,RESULT+4            -move result
         CLI   SIGN,C'-'                -was sign negative
         BNE   @CONVERT                 -no, so convert
         OI    PLUS+3,X'D'              -set to negative
@CONVERT EQU   *
         L     R2,0(R11)                -load address of arg-1
         STCKCONV STCKVAL=0(R2),        -convert from TOD              +
               CONVVAL=TODWORK,                                        +
               TIMETYPE=DEC,                                           +
               DATETYPE=MMDDYYYY
         CONVTOD CONVVAL=TODWORK,       -convert to TOD                +
               TODVAL=RESULT,                                          +
               TIMETYPE=DEC,                                           +
               DATETYPE=MMDDYYYY,                                      +
               OFFSET=PLUS
*
@RESULT  $REXX RESULT,V=RESULT
@EPILOG  $GJNLINK EPILOG,LASTCC=RC      -exit and set RC
*
@OVERFLW EQU   *
         $REXX SAY,V=$ERROR_1,          -display message               +
               RC=20,   '               -set RC=20                     +
               NEXT=@EPILOG             -exit
*
RC       DC    F'0'
RESULT   DC    D'0'
*
TODWORK  DS    0F
         DC    2F'0'
         DC    F'0'
         DC    F'0'
PLUS     DC    X'0000000F'
*
SIGN     DC    CL1'+'
ADD      DC    CL1'+'
SUB      DC    CL1'-'
*
DAYS     DC    A(0000)
HOURS    DC    A(00)
MINUTES  DC    A(00)
*
$ERROR_1 $REXX EMSG,V='Offset overflow, maximum exceeded'
         $REXX INCLUDE
         END   TODOFF
