GRG2TOD  TITLE 'REXX function- Convert to a Store Clock entry'
*
**********************************************************************
*                                                                    *
* Component_Type: MVS HL-Assembler REXX Function                     *
*    Description: Convert a to Store Clock entry                     *
*         Author: Gerard J Nicol                                     *
*           Date: September 1997                                     *
*                                                                    *
*--+----1----+----2----+----3----+----4----+----5----+----6----+----7*  --+----8
*
GRG2TOD  CSECT
GRG2TOD  AMODE 31
GRG2TOD  RMODE ANY
         PRINT GEN
@PROLOG  $GJNLINK PROLOG,PARMPTR=10     -std ALC entry
         $REXX ENTRY,ARGS=(1,2)         -std REXX entry
         $REXX VER,                                                    +
               A=1,                                                    +
               VTYPE=LENGTH,                                           +
               PARMS=(7,8),                                            +
               NB=Y
         $REXX VER,                                                    +
               A=1,                                                    +
               VTYPE=RANGE,                                            +
               PARMS=(1,99999999),                                     +
               NB=Y
         ST    R14,WORK1
         $REXX VER,                                                    +
               A=2,                                                    +
               VTYPE=LIST,                                             +
               PARMS=(DF1,DF2,DF3,DF4),                                +
               NB=N
         LR    R9,R14
         $REXX VER,                                                    +
               A=3,                                                    +
               VTYPE=LIST,                                             +
               PARMS=(VERIFY),                                         +
               NB=N
         LR    R8,R14
*
         $CONVERT C2D,                                                 +
               I=WORK1,                                                +
               O=WORK2,                                                +
               MODE=
         PACK  WORK3,WORK2
         LM    R0,R1,WORK3
         SRDL  R0,4
         ST    R1,CONVVAL+8
         LA    R15,@ARG2A
         SLL   R9,2
         AR    R15,R9
         L     R1,0(R15)
         BR    R1
@ARG2A   DC    A(YYYYDDD)
         DC    A(YYYYDDD)
         DC    A(MMDDYYYY)
         DC    A(DDMMYYYY)
         DC    A(YYYYMMDD)
YYYYDDD  EQU   *
         CONVTOD CONVVAL=CONVVAL,                                      +
               TODVAL=RESULT1,                                         +
               DATETYPE=YYYYDDD,                                       +
               TIMETYPE=MIC
         B     @CHECK
MMDDYYYY EQU   *
         CONVTOD CONVVAL=CONVVAL,                                      +
               TODVAL=RESULT1,                                         +
               DATETYPE=MMDDYYYY,                                      +
               TIMETYPE=MIC
         B     @CHECK
DDMMYYYY EQU   *
         CONVTOD CONVVAL=CONVVAL,                                      +
               TODVAL=RESULT1,                                         +
               DATETYPE=DDMMYYYY,                                      +
               TIMETYPE=MIC
         B     @CHECK
YYYYMMDD EQU   *
         CONVTOD CONVVAL=CONVVAL,                                      +
               TODVAL=RESULT1,                                         +
               DATETYPE=YYYYMMDD,                                      +
               TIMETYPE=MIC
@CHECK   EQU   *
         LTR   R8,R8                    -was check argument used
         BNZ   @VERIFY
         LTR   R15,R15
         BNZ   @ERROR_1
         $REXX RESULT,V=RESULT1
         B     @EPILOG
@VERIFY  EQU   *
         MVI   RESULT2,C'1'
         LTR   R15,R15
         BZ    @VERIFYR
         MVI   RESULT2,C'0'
@VERIFYR $REXX RESULT,V=RESULT2
@EPILOG  $GJNLINK EPILOG,LASTCC=RC      -exit and set RC
*
@ERROR_1 $REXX SAY,V=$ERROR_1,          -display message               +
               RC=20,                   -set RC=20                     +
               NEXT=@EPILOG             -exit
*
RC       DC    F'0'
WORK1    DC    F'0'
WORK2    DC    D'0'
WORK3    DC    D'0'
RESULT1  DC    D'0'
RESULT2  DC    CL1' '
DF1      DC    C'YYYYDDD'
DF2      DC    C'MMDDYYYY'
DF3      DC    C'DDMMYYYY'
DF4      DC    C'YYYYMMDD'
VERIFY   DC    C'VERIFY'
CONVVAL  DC    2D'0'
$ERROR_1 $REXX EMSG,V='Error establishing TOD, check arguments'
         $REXX INCLUDE
         END   GRG2TOD
