XLATEUM  TITLE 'REXX function- Translate under mask'
*
**********************************************************************
*                                                                    *
* Component_Type: MVS HL-Assembler REXX Function                     *
*    Description: Translate Under Mask                               *
*         Author: Gerard J Nicol                                     *
*           Date: September 1997                                     *
*                                                                    *
*--+----1----+----2----+----3----+----4----+----5----+----6----+----7*  --+----8
*
XLATEUM  CSECT
XLATEUM  AMODE 31
XLATEUM  RMODE ANY
         PRINT GEN
@PROLOG  $GJNLINK PROLOG,PARMPTR=10     -std ALC entry
         $REXX ENTRY,ARGS=(3,0)         -std REXX entry
         $REXX VER,                                                    +
               A=1,                                                    +
               VTYPE=LIST,                                             +
               PARMS=(EBCDIC,ASCII),                                   +
               NB=Y
         CH    R14,=H'2'                -was option ASCII
         BNE   @EBCDIC                  -if not, then skip
         MVI   MODE,X'80'               -set ASCII option
@EBCDIC  EQU   *
         XR    R5,R5                    -init xlate length
         LM    R6,R9,8(R11)             -load arg-2/arg-3 values
         CR    R9,R7                    -compare lengths
         BNH   @FFLT                    -not higher
         LR    R9,R7                    -sync lengths
@FFLT    EQU   *
         LTR   R9,R9                    -check for end of filter
         BZ    @ENDF                    -end reached
         CLI   0(R8),C' '               -check for space
         BNE   @XLATE                   -if not, then xlate
         LA    R5,1(R5)                 -add 1 to xlate length
@FFLTR   EQU   *
         BCTR  R9,0                     -subtract 1 from filter length
         LA    R8,1(R8)                 -move to next filter
         B     @FFLT                    -loop back
@XLATE   EQU   *
         BAL   R2,@XLATEIT              -translate
         LA    R5,1(R5)                 -add 1 for non-space
         AR    R6,R5                    -move along input
         SR    R7,R5                    -subtract from length
         XR    R5,R5                    -re-init length
         B     @FFLTR                   -branch back
@ENDF    EQU   *
         LR    R5,R7                    -load remaining length
         BAL   R2,@XLATEIT              -translate remainder
         LM    R2,R3,8(R11)             -load address/length of result
         $REXX RESULT,                  -set result                    +
               V=0(R2),                                                +
               VL=(3),                                                 +
               SUBMODE=LARGE
@EPILOG  $GJNLINK EPILOG,LASTCC=RC      -exit and set RC
*
@XLATEIT EQU   *
         LR    R1,R6
         LR    R0,R5
         L     R15,MODE
         OR    R1,R15
         SVC   103
         BR    R2
*
RC       DC    H'0'
MODE     DC    F'0'
ASCII    DC    C'A'
EBCDIC   DC    C'E'
         $REXX INCLUDE
         END   XLATEUM
