SNAP0002 TITLE ' '
SNAP0002 CSECT
SNAP0002 AMODE 31
SNAP0002 RMODE ANY
         PRINT NOGEN
@PROLOG  $GJNLINK PROLOG,PARMPTR=10     -std ALC entry
*
         LOAD  EP=IRXINIT               -load address of IRXINIT
         LR    R15,R0                   -load entry address
         LA    R1,IRXPARMS              -load address of parm list
         BALR  R14,R15                  -branch to IRXINIT
*
         L     R1,EVBADDR               -load address of block
         USING ENVBLOCK,R1
         L     R1,ENVBLOCK_PARMBLOCK
         USING PARMBLOCK,R1
         L     R1,PARMBLOCK_SUBCOMTB
         USING SUBCOMTB_HEADER,R1
         L     R2,SUBCOMTB_FIRST
         L     R3,SUBCOMTB_USED
         LR    R4,R3
         USING SUBCOMTB_NAME,R2
         $RPT  R=O30S
@LOOP    EQU   *
         MVC   OUT31NM,SUBCOMTB_NAME
         MVC   OUT31RO,SUBCOMTB_ROUTINE
         MVC   OUT31TO,SUBCOMTB_TOKEN
         $RPT  R=O31S
         LA    R2,HCLEN(R2)
         BCT   R3,@LOOP
         $RPT  R=O32S,FBREAK=Y
@EPILOG  $GJNLINK EPILOG
*
HCLEN    EQU   SUBCOMTB_NEXT-SUBCOMTB_NAME
IRXPARMS DS    0H
         DC    A(FUNCTION)
         DC    A(INITMOD)
         DC    A(INITADDR)
         DC    A(USERFLD)
         DC    A(RESERV)
         DC    A(EVBADDR)
         DC    A(REASCODE+X'80000000')
ID       DC    CL8'IRXEXCOM'
FUNCTION DC    CL8'FINDENVB'
INITMOD  DC    CL8'        '
INITADDR DC    A(0)
USERFLD  DC    A(0)
RESERV   DC    F'0'
EVBADDR  DS    A
REASCODE DS    F
*
O30S     DC    CL41' '
         ORG   O30S
         DC    CL1' '
         DC    CL6' '
         DC    CL8'--Name--'
         DC    CL1' '
         DC    CL8'Routine'
         DC    CL1' '
         DC    CL16'-----Token------'
OUT30DD  DC    CL8' '
*
O31S     DC    CL41' '
         ORG   O31S
         DC    CL1' '
         DC    CL6' '
OUT31NM  DC    CL8' '
         DC    CL1' '
OUT31RO  DC    CL8' '
         DC    CL1' '
OUT31TO  DC    CL16' '
O32S     DC    C' --------------End of Section.'
*
         $REXX INCLUDE
         END   SNAP0002
