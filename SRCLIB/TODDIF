TODDIF   TITLE 'REXX function- return difference of 2 TOD Clocks'
*
**********************************************************************
*                                                                    *
* Component_Type: MVS HL-Assembler REXX Function                     *
*    Description: Return the difference of 2 TOD Clock values        *
*         Author: Gerard J Nicol                                     *
*           Date: January 1998                                       *
*                                                                    *
*--+----1----+----2----+----3----+----4----+----5----+----6----+----7*  --+----8
*
TODDIF   CSECT
TODDIF   AMODE 31
TODDIF   RMODE ANY
         PRINT NOGEN
@PROLOG  $GJNLINK PROLOG,PARMPTR=10     -std ALC entry
         $REXX ENTRY,ARGS=(1,1)         -std REXX entry
         LR    R9,R15
         $REXX VER,                                                    +
               A=1,                                                    +
               VTYPE=LENGTH,                                           +
               PARMS=(8,8),                                            +
               NB=Y
         $REXX VER,                                                    +
               A=2,                                                    +
               VTYPE=LENGTH,                                           +
               PARMS=(8,8),                                            +
               NB=N
         XC    WORKAREA,WORKAREA
         MVI   SIGN,C'-'
         LM    R1,R2,0(R11)
         C     R9,=F'2'
         BE    @NODEF
         STCK  DEFAULT
         LA    R3,DEFAULT
         B     @DEFAULT
@NODEF   EQU   *
         LM    R3,R4,8(R11)
@DEFAULT EQU   *
         CLC   0(8,R1),0(R3)
         BE    @CALCDON
         BH    @NEG
@POS     EQU   *
         LM    R6,R7,0(R3)
         LM    R8,R9,0(R1)
         B     @GO
@NEG     EQU   *
         MVI   SIGN,C'-'
         LM    R6,R7,0(R1)
         LM    R8,R9,0(R3)
@GO      EQU   *
         SLR   R7,R9
         BO    @NOBOROW
         S     R6,=F'1'
@NOBOROW EQU   *
         SR    R6,R8
         ST    R6,WORKAREA
         ST    R7,WORKAREA+4
*
         LM    R14,R15,WORKAREA
         SRDL  R14,12
         D     R14,=A(1000000*60*24)
         XR    R14,R14
         D     R14,=A(60)
         ST    R15,WORKWORD
         $CONVERT C2D,                                                 +
               I=WORKWORD,                                             +
               O=DAYS,                                                 +
               MODE=
*
         STCKCONV STCKVAL=WORKAREA,     -convert from TOD              +
               CONVVAL=STCKRSLT
         UNPK  TIME,STCKRSLT+0(8)       -unpack date
*
@CALCDON EQU   *
         $REXX RESULT,V=RESULT
@EPILOG  $GJNLINK EPILOG,LASTCC=RC      -exit and set RC
*
RC       DC    H'0'
RESULT   DC    CL20' '
         ORG   RESULT
SIGN     DC    CL1' '
         DC    CL1' '
DAYS     DC    CL5' '
         DC    CL1' '
TIME     DC    CL15' '
         ORG   RESULT+L'RESULT
WORKAREA DC    D'0'
DEFAULT  DC    D'0'
WORKWORD DC    F'0'
TIMEAREA DC    CL15' '
STCKRSLT DS    0F
         DC    2F'0'
         DC    F'0'
         DC    F'0'
         $REXX INCLUDE
         END   TODDIF
