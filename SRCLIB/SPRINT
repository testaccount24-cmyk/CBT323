SPRINT   TITLE 'REXX function- TPUT messages to the screen'
*
**********************************************************************
*                                                                    *
* Component_Type: MVS HL-Assembler REXX Function                     *
*    Description: TPUT messages to the screen                        *
*         Author: Gerard J Nicol                                     *
*           Date: September 1997                                     *
*                                                                    *
*--+----1----+----2----+----3----+----4----+----5----+----6----+----7*  --+----8
*
SPRINT   CSECT
SPRINT   AMODE 31
SPRINT   RMODE ANY
         PRINT GEN
@PROLOG  $GJNLINK PROLOG,PARMPTR=10     -std ALC entry
         $REXX ENTRY,ARGS=(1,4)         -std REXX entry
*
* Get Size details for terminal
*
         GTDEVSIZ
         STH   R1,SWIDTH
         LR    R2,R0
*
         $REXX VER,                                                    +
               A=2,                                                    +
               VTYPE=RANGE,                                            +
               PARMS=(0,80),                                           +
               NB=N
         STH   R14,X
*
         $REXX VER,                                                    +
               A=3,                                                    +
               VTYPE=RANGE,                                            +
               PARMS=(0,40),                                           +
               NB=N
         CR    R2,R14
         BNL   @DEPTHOK
         $REXX SAY,V=$ERROR_1,          -display message               +
               RC=20,                   -set RC=20                     +
               NEXT=@EPILOG             -exit
@DEPTHOK EQU   *
         STH   R14,Y
*
         $REXX VER,                                                    +
               A=4,                                                    +
               VTYPE=LIST,                                             +
               PARMS=(C1,C2,C3,C4,C5,C6,C7),                           +
               NB=N
         LTR   R14,R14
         LR    R6,R14                   -save the color index
*
         $REXX VER,                                                    +
               A=5,                                                    +
               VTYPE=LIST,                                             +
               PARMS=(H1,H2,H3,H4),                                    +
               NB=N
         LTR   R14,R14
         BZ    @HILITOK
         BCTR  R14,0
@HILITOK EQU   *
         LR    R7,R14                   -save the hilite index
*
* Load default length of header section
*
         LA    R5,HEADERL               -length of fixed header
*
* Establish Absolute screen position
*
         LH    R1,Y                     -load the Y Co-ord
         MH    R1,SWIDTH                -multiply by screen width
         AH    R1,X                     -add the X Co-ord
         STCM  R1,B'0011',HEADERP       -store screen position
*
* Establish Color for display
*
@COLOR   EQU   *
         LTR   R6,R6                    -test color index
         BZ    @HILITE                  -no index, so skip
         LA    R5,3(R5)                 -add to header length
         BCTR  R6,0                     -adjust index
         MH    R6,=H'3'                 -find color attr in array
         LA    R6,COTABLE(R6)           -load address of attribute
*
* Establish Hilite for display
*
@HILITE  EQU   *
         LTR   R7,R7                    -test hilite index
         BZ    @GETSTOR                 -no index, so skip
         LA    R5,3(R5)                 -add to header length
         BCTR  R7,0                     -adjust index
         MH    R7,=H'3'                 -find hilite attr in array
         LA    R7,HITABLE(R7)           -load address of attribute
*
* Get storage for TPUT
*
@GETSTOR EQU   *
         LM    R2,R3,0(R11)             -load address/length of arg-1
         LA    R9,0(R5,R3)              -calculate storage length
         STORAGE OBTAIN,                -get storage                   +
               LENGTH=(9),              -calculated length             +
               LOC=BELOW                -below the 16meg line for TPUT
         LR    R8,R1                    -save address of area
*
* Move header to new TPUT area
*
         MVC   0(HEADERL,R8),HEADER     -move header
         LA    R4,HEADERL(R8)           -move past header
         LTR   R6,R6                    -test for color attribute
         BZ    @NOCOLOR                 -no, so skip
         MVC   0(3,R4),0(R6)            -set color
         LA    R4,3(R4)                 -add 3 to address
@NOCOLOR EQU   *
         LTR   R7,R7                    -test for hilite attribute
         BZ    @NOHILIT                 -branch around
         MVC   0(3,R4),0(R7)            -set hilite
         LA    R4,3(R4)                 -add 3 to address
@NOHILIT EQU   *
         LR    R0,R4
         LR    R1,R3
         LR    R14,R2
         LR    R15,R3
         MVCL  R0,R14                   -move text
*
* Issue Full Screen TPUT
*
         LM    R14,R1,0(R8)
         TPUT  0(R8),(9),FULLSCR
@RESULT  EQU   *
         STORAGE RELEASE,LENGTH=(9),ADDR=(8)
         $REXX RESULT,V=RESULT
@EPILOG  $GJNLINK EPILOG,LASTCC=RC      -exit and set RC
*
RC       DC    H'0'
RESULT   DC    CL1'0'
*
HEADER   DS    0F
         DC    X'27F1C211'              -operation
HEADERP  DC    XL2'0000'                -position
HEADERL  EQU   *-HEADER
*
X        DC    H'0'
Y        DC    H'0'
*
C1       DC    C'B'
C2       DC    C'R'
C3       DC    C'P'
C4       DC    C'G'
C5       DC    C'T'
C6       DC    C'Y'
C7       DC    C'W'
*
H1       DC    C'N'
H2       DC    C'B'
H3       DC    C'R'
H4       DC    C'U'
*
HITABLE  EQU   *
         DC    X'2841F1'
         DC    X'2841F2'
         DC    X'2841F4'
COTABLE  EQU   *
         DC    X'2842F1'
         DC    X'2842F2'
         DC    X'2842F3'
         DC    X'2842F4'
         DC    X'2842F5'
         DC    X'2842F6'
         DC    X'2842F7'
*
SWIDTH   DC    H'80'
*
$ERROR_1 $REXX EMSG,V='The row value is greater than terminal allows'
         $REXX INCLUDE
         END   SPRINT
