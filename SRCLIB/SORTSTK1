SORTSTK1 TITLE 'REXX function- '
*
**********************************************************************
*                                                                    *
* Component_Type: MVS HL-Assembler REXX Function                     *
*    Description: Sort a data stack                                  *
*         Author: Gerard J Nicol                                     *
*           Date: September 1997                                     *
*                                                                    *
*--+----1----+----2----+----3----+----4----+----5----+----6----+----7*  --+----8
*
SORTSTK1 CSECT
SORTSTK1 AMODE 31
SORTSTK1 RMODE ANY
         PRINT GEN
@PROLOG  $GJNLINK PROLOG,PARMPTR=10
         LM    R2,R3,WORKADDR           -load address/length of warea
         LTR   R2,R2                    -do we have a previous area
         BZ    @NOFREE                  -no, so skip
         STORAGE RELEASE,               -release old storage           +
               ADDR=(2),                                               +
               LENGTH=(3)
@NOFREE  EQU   *
         $REXX PULL                     -PULL variable of data stack
         LTR   R15,R15                  -was PULL OK
         BZ    @PULLOK                  -yes, so process variable
         MVI   RC,X'08'                 -set RC for exit
         B     @EPILOG                  -branch to exit
@PULLOK  EQU   *
         LR    R6,R0                    -save length
         LR    R7,R1                    -save address
         LA    R2,4(R6)                 -allow for control bytes
         ST    R2,WORKLENT              -store length
*
         STORAGE OBTAIN,                -get storage                   +
               LENGTH=(2)
*
         ST    R1,WORKADDR              -save address
*
         STH   R2,0(R1)
         MVC   2(2,R1),=H'1'
         LA    R0,4(R1)                 -load address+RDW
         LR    R1,R6                    -load length
         LR    R14,R7
         LR    R15,R6
         MVCL  R0,R14
         L     R2,WORKADDR
         L     R1,WORKADDR
         MVI   RC,X'0C'
@EPILOG  $GJNLINK EPILOG,LASTCC=RC
*
WORKADDR DC    A(0)
WORKLENT DC    A(0)
RC       DC    XL1'00'
*
         END   SORTSTK1
