GJNDYN00 TITLE 'Dynamic Allocation Helper'
*
GJNDYN00 CSECT
GJNDYN00 AMODE 31
GJNDYN00 RMODE 24
         PRINT GEN
@PROLOG  $GJNLINK PROLOG,PARMPTR=R10    -entry with EFPL in R10
         LM    R14,R15,0(R10)           -load DSN/DDName
         MVC   DSN,0(R14)               -set dataset name
         LTR   R15,R15                  -test to see if we want alloc
         BNP   @LOCATE                  -function=allocate
         B     @FREE                    -function=free
@LOCATE  EQU   *
         LOCATE CAT1
         LTR   R15,R15
         BZ    @OBTAIN
         $REXX SAY,V=$ERROR_5,          -display message               +
               RC=20,   '               -set RC=20                     +
               NEXT=@EPILOG             -exit
@OBTAIN  EQU   *
         OBTAIN VTOC1
         LTR   R15,R15
         BZ    @TESTPO
         $REXX SAY,V=$ERROR_6,          -display message               +
               RC=20,   '               -set RC=20                     +
               NEXT=@EPILOG             -exit
@TESTPO  EQU   *
         LA    R1,WORKAREA
         USING DS1FMTID,R1
         TM    DS1DSORG,DS1DSGPO
         BO    @ALLOC
         $REXX SAY,V=$ERROR_7,          -display message               +
               RC=20,   '               -set RC=20                     +
               NEXT=@EPILOG             -exit
@ALLOC   EQU   *
         LA    R2,RB                    -get address of workarea
         USING S99RB,R2                 -map to request block
         XC    S99RB,S99RB              -set request block to X'00'
         MVI   S99RBLN,RBLEN            -set request block length
         MVI   S99VERB,S99VRBAL         -set allocation function
         LA    R1,$ALLOC                -load address of text list
         ST    R1,S99TXTPP              -set pointer to text area
         LA    R1,$DYNPTR               -sets address of RB ptr
         DYNALLOC
         LTR   R15,R15
         BZ    @ALLOCOK
         $REXX SAY,V=$ERROR_4,          -display message               +
               RC=20,   '               -set RC=20                     +
               NEXT=@EPILOG             -exit
@ALLOCOK EQU   *
         L     R1,4(R10)
         MVC   0(8,R1),DDNAME
         B     @EPILOG
@FREE    EQU   *                        -free dataset
         LA    R2,RB                    -get address of workarea
         USING S99RB,R2                 -map to request block
         XC    S99RB,S99RB              -set request block to X'00'
         MVI   S99RBLN,RBLEN            -set request block length
         MVI   S99VERB,S99VRBUN         -set free function
         LA    R1,$FREE                 -load address of text list
         ST    R1,S99TXTPP              -set pointer to text area
         LA    R1,$DYNPTR               -sets address of RB ptr
         DYNALLOC
@EPILOG  EQU   *
         $GJNLINK EPILOG,LASTCC=RC      -exit with RC
*
*
$DYNPTR  CALL  ,(RB),VL,MF=L
$ALLOC   CALL  ,(DSN#TU,STAT#TU,DD#TU),VL,MF=L
$FREE    CALL  ,(DD#TU),VL,MF=L
RBLEN    EQU   S99RBEND-S99RB
RB       DS    CL(RBLEN)
*
DSN#TU   DC    AL2(DALDSNAM)
         DC    X'0001'
         DC    X'002C'
DSN      DC    CL44' '
STAT#TU  DC    AL2(DALSTATS)
         DC    X'0001'
         DC    X'0001'
         DC    XL1'08'
DD#TU    DC    AL2(DALRTDDN)
         DC    X'0001'
         DC    X'0008'
DDNAME   DS    CL8' '
*
RC       DC    H'0'
*
*
CAT1     CAMLST NAME,DSN,,WORKAREA
VTOC1    CAMLST SEARCH,DSN,WORKAREA+6,WORKAREA
WORKAREA DC    18CL16' '
*
$ERROR_4 $REXX EMSG,V='Dataset allocation failed'
$ERROR_5 $REXX EMSG,V='Specified dataset is not in the catalog'
$ERROR_6 $REXX EMSG,V='Specified dataset can not be found on VTOC'
$ERROR_7 $REXX EMSG,V='Specified is not DSORG PO'
*
         IEFZB4D0
         IEFZB4D2
         IEFJFCBN
         IECSDSL1 1
*
         END   GJNDYN00
