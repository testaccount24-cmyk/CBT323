MEMBERS  TITLE 'REXX function to check string against a MEMBERS'
*
*---------------------------------------------------------------------*
*                                                                     *
*      Module: MEMBERS                                                *
*      Author: Gerard Nicol                                           *
* Description: REXX Function to list members of a PDS                 *
*     Calling: MEMBERS(dataset_name,filter)                           *
*                                                                     *
*---+----1----+----2----+----3----+----4----+----5----+----6----+----7*
*
MEMBERS  CSECT
MEMBERS  AMODE 24
MEMBERS  RMODE 24
         PRINT GEN
@PROLOG  $GJNLINK PROLOG,PARMPTR=R10    -entry with EFPL in R10
         $REXX ENTRY,ARGS=(1,2)
         $REXX VER,                                                    +
               A=1,                                                    +
               VTYPE=LENGTH,                                           +
               PARMS=(10,44),                                          +
               NB=Y
         $REXX VER,                                                    +
               A=2,                                                    +
               VTYPE=LENGTH,                                           +
               PARMS=(1,8),                                            +
               NB=N
         $REXX VER,                                                    +
               A=3,                                                    +
               VTYPE=LIST,                                             +
               PARMS=(NOSTAK),                                         +
               NB=N
         STC   R14,STAKFLAG
*
         LA    R8,@QUEUE                -load default address
         L     R1,12(R11)
         LTR   R1,R1
         BZ    @NO2ARG                  -do not set filter values
         BNP   @NO2ARG                  -do not set filter values
         MVC   FLTRPARM(4),8(R11)       -set address of filter
         MVC   LENGTHS(4),12(R11)       -set length of filter
         LA    R8,@FILTER               -load filter routine address
@NO2ARG  EQU   *
@PARMOK1 EQU   *
         LM    R0,R1,0(R11)             -load address/length of DSN
         LA    R14,DSN                  -load address of receiver
         LR    R15,R1                   -load length
         MVCL  R14,R0                   -move in dataset name
         CALL  GJNDYN00,(DSN,DDNAME),VL
         LTR   R15,R15
         BNZ   @FREE
@READ    EQU   *
         MVC   INPDS+40(8),DDNAME
         OPEN  (INPDS,INPUT)
         XR    R9,R9                    -init counter
         USING DUMMY,R7
@GETNBLK EQU   *
         READ  DECB1,                   -read 256 byte block           +
               SF,                                                     +
               INPDS,                                                  +
               BUFFER,                                                 +
               'S'
         LA    R7,BUFFER+2              -get address of buffer
         CHECK DECB1                    -wait for read to complete
@GETMEMB EQU   *
         CLI   0(R7),X'FF'              -check for end of directory
         BE    @EOF_DIR                 -if end, then close & exit
         BR    R8                       -branch to queue/filter routine
@FILTER  EQU   *
         ST    R7,FLTRPARM+8            -store address of member
         $FINDCHR I=MEMBER              -find length of member name
         ST    R15,LENGTHS+4            -store length of member name
         CALL  GJNFLTER,MF=(E,FLTRPARM)
         LTR   R15,R15
         BNZ   @NOQUEUE
@QUEUE   EQU   *
         LA    R9,1(R9)                 -add 1 to counter
         CLI   STAKFLAG,X'01'
         BE    @NOQUEUE
         $REXX QUEUE,                                                  +
               V=MEMBER,                                               +
               SUBMODE=FSPACE
@NOQUEUE EQU   *
         LA    R2,256(R2)               -move to next member
         IC    R14,11(,R7)              -"C" byte
         N     R14,=F'31'               -get number of halfwords
         LA    R14,12(R14,R14)          -entry length in R14
         LH    R15,BUFFER               -how much of buffer was used
         LA    R15,BUFFER-1(R15)        -load address of last data
         BXLE  R7,R14,@GETMEMB          -see if we are at the end
         B     @GETNBLK                 -get next directory block
@EOF_DIR EQU   *
         CLOSE (INPDS)                  -close file
@FREE    EQU   *                        -free dataset
         CALL  GJNDYN00,(DSN,DDNAME),VL
@EPILOG  EQU   *
         $REXX RESULT,V=(9),SUBMODE=TOTAL
         $GJNLINK EPILOG,LASTCC=RC      -exit with RC
*
INPDS    DCB   DSORG=PO,                                               +
               MACRF=R,                                                +
               DDNAME=INPDS,                                           +
               EXLST=EXITLST,                                          +
               BLKSIZE=256,                                            +
               RECFM=U
*
DSN      DC    CL44' '
DDNAME   DS    CL8' '
*
EXITLST  DS    0F,X'87',AL3(0)
BUFFER   DC    0F'0',CL256' '
RC       DC    H'0'
CNT      DC    F'0'
*
FLTRPARM CALL  ,(,LENGTHS,,LENGTHS+4),MF=L
LENGTHS  DC    F'0'
         DC    F'0'
*
NOSTAK   DC    C'NOSTAK'
STAKFLAG DC    XL1'00'
*
         $REXX INCLUDE
         IEFZB4D0
         IEFZB4D2
         IEFJFCBN
         IECSDSL1 1
*
DUMMY    DSECT
MEMBER   DS    CL8' '
*
         END   MEMBERS
