FMEMBER  TITLE 'REXX function- find a member in an allocation'
*
**********************************************************************
*                                                                    *
* Component_Type: MVS HL-Assembler REXX Function                     *
*    Description: Find a member in an allocation                     *
*         Author: Gerard J Nicol                                     *
*           Date: September 1997                                     *
*                                                                    *
*--+----1----+----2----+----3----+----4----+----5----+----6----+----7*  --+----8
*
FMEMBER  CSECT
FMEMBER  AMODE 31
FMEMBER  RMODE 24
         PRINT GEN
@PROLOG  $GJNLINK PROLOG,PARMPTR=10     -std ALC entry
         $REXX ENTRY,ARGS=(2,0)         -std REXX entry
*
         $REXX VER,                                                    +
               A=1,                                                    +
               VTYPE=LENGTH,                                           +
               PARMS=(1,8),                                            +
               NB=Y
         $REXX VER,                                                    +
               A=2,                                                    +
               VTYPE=LENGTH,                                           +
               PARMS=(1,8),                                            +
               NB=Y
*
         LA    R0,DDNAME                -load address of DDName
         LA    R1,8                     -load length of DDName
         LM    R14,R15,0(R11)           -load address/length of arg1
         ICM   R15,B'1000',=C' '        -set pad char
         MVCL  R0,R14                   -set DDName
         LA    R1,PDS                   -load address of DCB
         USING IHADCB,R1                -map DCB
         MVC   DCBDDNAM,DDNAME
         DROP  R1
*
         LA    R0,PDSENTRY
         LA    R1,8
         LM    R14,R15,8(R11)           -load address/length of arg1
         ICM   R15,B'1000',=C' '        -set pad char
         MVCL  R0,R14                   -set member name
*
         OPEN  (PDS,INPUT)
         BLDL  PDS,BLDLAREA
         LTR   R15,R15
         BNZ   @BADRC
*
*
         LA    R7,PDSENTRY
         USING PDS2,R7
*
         $CONVERT C2D,                                                 +
               I=PDS2CNCT,                                             +
               O=CONCAT,                                               +
               MODE=
*
         XR    R1,R1
         IC    R1,PDS2CNCT
         LA    R1,1(R1)
         STC   R1,CONCATP
*
         CALL  GJNGETJF,MF=(E,PARMLIST)
         MVC   DSN,WORKAREA+4
*
@RESULT  EQU   *
         CLOSE (PDS)
         $REXX RESULT,V=RESULT
@EPILOG  $GJNLINK EPILOG,LASTCC=RC      -exit and set RC
*
@BADRC   EQU   *
         MVC   CONCAT,=CL3'000'
         MVC   DSN,=CL44'MEMBER-NOT-FOUND'
         B     @RESULT
*
PDS      DCB   DSORG=PO,MACRF=R
*
PARMLIST DS    0F
         DC    A(DDNAME)
         DC    A(CONCATP)
         DC    A(WORKAREL)
         DC    A(WORKAREA)
WORKAREA DC    CL200' '
WORKAREL DC    A(L'WORKAREA)
CONCATP  DS    XL1
*
DDNAME   DC    CL8' '
BLDLAREA DS    0F
         DC    H'1'
         DC    H'100'
PDSENTRY DC    CL100' '
*
RC       DC    H'0'
RESULT   DC    CL100' '
         ORG   RESULT
CONCAT   DC    CL3'000'
         DC    CL1' '
DSN      DC    CL44' '
         ORG   RESULT+L'RESULT
*
         $REXX INCLUDE
         DCBD  DSORG=PO
         IHAPDS
         END   FMEMBER
