SORTSTAK TITLE 'REXX function- return the current Store Clock value'
*
**********************************************************************
*                                                                    *
* Component_Type: MVS HL-Assembler REXX Function                     *
*    Description: Sort the data stack                                *
*         Author: Gerard J Nicol                                     *
*           Date: September 1997                                     *
*                                                                    *
*--+----1----+----2----+----3----+----4----+----5----+----6----+----7*  --+----8
*
SORTSTAK CSECT
SORTSTAK AMODE 31
SORTSTAK RMODE ANY
         PRINT NOGEN
@PROLOG  $GJNLINK PROLOG,PARMPTR=10     -std ALC entry
         $REXX ENTRY,ARGS=(0,3)         -std REXX entry
         $REXX VER,                                                    +
               A=1,                                                    +
               VTYPE=RANGE,                                            +
               PARMS=(1,1000),                                         +
               NB=N
         LA    R14,4(R14)
         ST    R14,ARG1
         $REXX VER,                                                    +
               A=2,                                                    +
               VTYPE=RANGE,                                            +
               PARMS=(1,1000),                                         +
               NB=N
         LTR   R14,R14
         BNZ   @ARG2NZ
         LA    R14,1000
@ARG2NZ  EQU   *
         ST    R14,ARG2
         $REXX VER,                                                    +
               A=3,                                                    +
               VTYPE=LIST,                                             +
               PARMS=(ASC,DEC),                                        +
               NB=N
         LA    R1,ARG2D(R14)
         MVC   DIRECT,0(R1)
         $CONVERT C2D,                                                 +
               I=ARG1,                                                 +
               O=OFFSET,                                               +
               MODE=
         $CONVERT C2D,                                                 +
               I=ARG2,                                                 +
               O=LENGTH,                                               +
               MODE=
*
         CALL  SORTSTK0,(ARGS)
*
@RESULT  EQU   *
         $REXX RESULT,V=RESULT
@EPILOG  $GJNLINK EPILOG,LASTCC=RC      -exit and set RC
*
RC       DC    XL1'00'
RESULT   DC    C'1'
*
         LTORG
*
ARG1     DC    F'0'
ARG2     DC    F'0'
ARG2D    DC    C'A'
ASC      DC    C'A'
DEC      DC    C'D'
*
ARGS     DC    AL2(CTL2-CTL1)
CTL1     EQU   *
         DC    C' SORT FIELDS=('
OFFSET   DC    C'00005'
         DC    C','
LENGTH   DC    C'00002'
         DC    C',CH,'
DIRECT   DC    C'A'
         DC    C') RECORD LENGTH=32760,TYPE=V OPTION MSGPRT='
MSGPRT   DC    C'NONE          '
CTL2     EQU   *
         $REXX INCLUDE
         END   SORTSTAK
