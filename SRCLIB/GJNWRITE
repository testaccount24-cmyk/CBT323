GJNWRITE TITLE 'General Report Writer'
*
GJNWRITE CSECT
GJNWRITE AMODE 31
GJNWRITE RMODE 24
         PRINT NOGEN
*
@PROLOG  $GJNLINK PROLOG,PARMPTR=10     -std ALC entry
         LM    R5,R7,GJNDCB             -load first 5 arguments
*
* R5=DCB, R6=RecordCount, R7=Records/Page
*
         LA    R6,1(R6)                 -add 1 to record count
         ST    R6,GJNRECCT              -store new record count
         XR    R0,R0                    -zero for divide
         LR    R1,R6                    -load record count
         DR    R0,R7                    -divide by recs/page
         LTR   R0,R0                    -is page full
         BZ    @PAGEFUL                 -yes, write footer
*
         L     R15,GJNADDRR             -load address of record
         LTR   R15,R15                  -test for forced break
         BNP   @FBREAK                  -process forced break
*
         BCTR  R0,0                     -subtract 1
         LTR   R0,R0                    -is page full
         BZ    @PAGENEW                 -yes, write header
         $PERF GO,A=@PAGENOP,L=1        -process normal record
@EPILOG  $GJNLINK EPILOG
*
@FBREAK  DS    0H
         XR    R0,R0
         LA    R1,1(R1)
         MR    R0,R7
         ST    R1,GJNRECCT
@PAGEFUL DS    0H
         $PERF GO,A=@PAGENOP,L=1        -process normal record
         USING IHADCB,R5                -map DCB
         LH    R3,DCBLRECL              -establish LRECL
         STORAGE OBTAIN,LENGTH=(3)
         LR    R2,R1                    -save address
         LR    R6,R2
         LR    R7,R3
         XR    R0,R0
         XR    R1,R1
         ICM   R1,B'1000',=C' '
         MVCL  R6,R0
         LA    R1,0(R3,R2)              -load end of record
         S     R1,=A(L'FOOTER)          -subtract length of footer
         MVC   0(L'FOOTER,R1),FOOTER    -move footer
         LA    R1,L'FOOTER-6(R1)
         L     R15,PAGENO
         LA    R15,1(R15)
         CVD   R15,CONVWORK
         OI    CONVWORK+7,X'0F'
         UNPK  0(5,R1),CONVWORK
*
         $PERF GO,A=@WRITE,L=2          -process header record
         STORAGE RELEASE,               -release storage               +
               LENGTH=(7),                                             +
               ADDR=(6)
         B     @EPILOG
*
@PAGENEW DS    0H
         ST    R1,PAGENO                -save page number
         LM    R2,R3,GJNADDRH           -load header address/length
         $PERF GO,A=@WRITE,L=2          -process header record
         $PERF GO,A=@PAGENOP,L=1        -process normal record
         B     @EPILOG                  -branch to exit
*
@PAGENOP DS    0H
         LM    R2,R3,GJNADDRR           -load normal address/length
         $PERF GO,A=@WRITE,L=2
         $PERF BACK,L=1
*
@WRITE   DS    0H
         USING IHADCB,R5                -map DCB
         LH    R8,DCBLRECL              -establish LRECL
         STORAGE OBTAIN,                -obtain LRECL bytes of storage +
               LENGTH=(8),              -use LRECL length              +
               LOC=BELOW                -get below the line
         LR    R9,R1                    -save storage address
         LR    R0,R1                    -load address
         LR    R1,R8                    -load length
         ICM   R3,B'1000',=C' '         -set null pad character
         MVCL  R0,R2                    -move to write area
         PUT   (5),(9)                  -write record
         STORAGE RELEASE,               -release storage               +
               LENGTH=(8),              -use LRECL length              +
               ADDR=(9)
         $PERF BACK,L=2
*
PAGENO   DS    F
CONVWORK DS    D
FOOTER   DC    CL15'Page No: 00000.'
*
         ENTRY $GJNWRIT
$GJNWRIT DS    0F
GJNDCB   DC    A(0)
GJNRECCT DC    A(0)
GJNRECPP DC    A(40)
GJNADDRR DC    A(0)
GJNLENRR DC    A(0)
GJNADDRH DC    A(0)
GJNLENRH DC    A(0)
GJNUSERA DC    A(0)
*
         DCBD  DSORG=PS
*
         END   GJNWRITE
