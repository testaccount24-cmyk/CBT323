CONCAT   TITLE 'REXX function- Concatenate 2 or more DDs'
*
**********************************************************************
*                                                                    *
* Component_Type: MVS HL-Assembler REXX Function                     *
*    Description: Concatenate 2 or more DDs                          *
*         Author: Gerard J Nicol                                     *
*           Date: September 1997                                     *
*                                                                    *
*--+----1----+----2----+----3----+----4----+----5----+----6----+----7*  --+----8
*
CONCAT   CSECT
CONCAT   AMODE ANY
CONCAT   RMODE ANY
         PRINT GEN
@PROLOG  $GJNLINK PROLOG,PARMPTR=10     -std entry (link stack)
         $REXX ENTRY,ARGS=(2,40)        -std REXX entry
         LR    R6,R15                   -save number of args
         SLL   R15,3                    -multiply by 8
         STH   R15,CALLARGL             -save length
         LA    R7,8                     -the length of a DDName
         LA    R8,CALLARGA              -load address of array
         LA    R7,8                     -the length of a DDName
@LOOP    EQU   *
         LM    R2,R3,0(R11)             -load address/length
         CR    R7,R3                    -test length
         BH    @SETDD                   -treat it as a DDName
         ICM   R3,B'1000',=C' '         -pad with spaces
         LA    R14,DSNAME               -load address of DSName
         LA    R15,L'DSNAME             -load length of DSName
         MVCL  R14,R2                   -set dataset name
         ST    R8,$ALLOC+4              -set the address of DDName
         OI    $ALLOC+4,X'80'
         CALL  GJNDYN00,MF=(E,$ALLOC)   -allocate the file
         $REXX SAY,                                                    +
               V=ERROR01,                                              +
               RC=20,                                                  +
               NEXT=@EPILOG,                                           +
               IFRCGT=0
@AOK     EQU   *
         LA    R8,8(R8)                 -move to next output
         B     @NEXT                    -move on to next argument
@SETDD   EQU   *
         ICM   R3,B'1000',=C' '         -pad with spaces
         LA    R9,L'CALLARGA            -load length of array item
         MVCL  R8,R2                    -move characters
@NEXT    EQU   *
         LA    R11,8(R11)               -move to next argument
         BCT   R6,@LOOP                 -loop through args
         CALL  GJNCNCAT,(CALLARG),VL    -call concatenation routine
         $REXX SAY,                                                    +
               V=ERROR02,                                              +
               RC=20,                                                  +
               NEXT=@EPILOG,                                           +
               IFRCGT=0
@RESULT  EQU   *
         $REXX RESULT,V=CALLARGA        -set result
@EPILOG  $GJNLINK EPILOG,LASTCC=RC      -exit program
*
RC       DC    XL1'00'
$ALLOC   CALL  ,(DSNAME,),MF=L
DSNAME   DS    CL44
*
CALLARG  DS    0F
CALLARGL DS    H
CALLARGA DS    40CL8
*
ERROR01  $REXX EMSG,V='Allocation of dataset failed'
ERROR02  $REXX EMSG,V='Concatenation of datasets has failed'
         $REXX INCLUDE
*
         END   CONCAT
