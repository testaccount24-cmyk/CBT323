REXXHC   TITLE 'REXX function- return the REXX Host Cmd table'
*
**********************************************************************
*                                                                    *
* Component_Type: MVS HL-Assembler REXX Function                     *
*    Description: Return the REXX Host Cmd table on the data stack   *
*         Author: Gerard J Nicol                                     *
*           Date: September 1997                                     *
*                                                                    *
*--+----1----+----2----+----3----+----4----+----5----+----6----+----7*  --+----8
*
REXXHC   CSECT
REXXHC   AMODE 31
REXXHC   RMODE ANY
         PRINT NOGEN
@PROLOG  $GJNLINK PROLOG,PARMPTR=10     -std ALC entry
         $REXX ENTRY,ARGS=(0,0)         -std REXX entry
         LOAD  EP=IRXINIT               -load address of IRXINIT
         LR    R15,R0                   -load entry address
         LA    R1,IRXPARMS              -load address of parm list
         BALR  R14,R15                  -branch to IRXINIT
         L     R1,EVBADDR
         USING ENVBLOCK,R1
         L     R1,ENVBLOCK_PARMBLOCK
         USING PARMBLOCK,R1
         L     R1,PARMBLOCK_SUBCOMTB
         USING SUBCOMTB_HEADER,R1
         L     R2,SUBCOMTB_FIRST
         L     R3,SUBCOMTB_USED
         LR    R4,R3
         USING SUBCOMTB_NAME,R2
@LOOP    EQU   *
         MVC   ENVNAME,SUBCOMTB_NAME
         MVC   ENVROU,SUBCOMTB_ROUTINE
         MVC   ENVTOK,SUBCOMTB_TOKEN
         $REXX QUEUE,V=QUEUEVAL
         LA    R2,HCLEN(R2)
         BCT   R3,@LOOP
@RESULT  EQU   *
         $REXX RESULT,V=(4),SUBMODE=TOTAL
@EPILOG  $GJNLINK EPILOG,LASTCC=RC      -exit and set RC
*
RC       DC    H'0'
RESULT   DC    CL8'00000000'
HCLEN    EQU   SUBCOMTB_NEXT-SUBCOMTB_NAME
*
QUEUEVAL DS    CL(QUEUESTF-QUEUESTS)
         ORG   QUEUEVAL
QUEUESTS EQU   *
ENVNAME  DC    CL8' '
         DC    CL1' '
ENVROU   DC    CL8' '
         DC    CL1' '
ENVTOK   DC    CL16' '
QUEUESTF EQU   *
*
FUNCTION DC    CL8'FINDENVB'
INITMOD  DC    CL8'        '
INITADDR DC    A(0)
USERFLD  DC    A(0)
RESERV   DC    F'0'
EVBADDR  DS    A
REASCODE DS    F
IRXPARMS DS    0H
         DC    A(FUNCTION)
         DC    A(INITMOD)
         DC    A(INITADDR)
         DC    A(USERFLD)
         DC    A(RESERV)
         DC    A(EVBADDR)
         DC    A(REASCODE+X'80000000')
*
         $REXX INCLUDE
         END   REXXHC
